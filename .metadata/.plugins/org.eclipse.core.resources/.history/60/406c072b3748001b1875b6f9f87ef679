<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

<%@ page import="user.UserDAO"%>
<%@ page import="evaluation.EvaluationDAO"%>
<%@ page import="likey.LikeyDTO"%>
<%@ page import="java.io.PrintWriter" %> 

<%
	//로그인 안하면 좋아요 못함
	String userID =null;
	if(session.getAttribute("userID")!=null){
		userID =(String)session.getAttribute("userID");
	}
	if(userID ==null){ //로그인이 안돼있음 로그인시킴
		PrintWriter script = response.getWriter();
		script.println("<script>");
		script.println("alert('로그인을 해주세요.');");
		script.println("location.href='userLogin.jsp'");
		script.println("</script>");
		script.close();
		return;
	}
	
	//요청 받기
	request.setCharacterEncoding("UTF-8");
	String evaluationID =null;
	if(request.getParameter("evaluationID")!=null){
		evaluationID = request.getParameter("evaluationID");
	}
	EvaluationDAO evaluationDAO = new EvaluationDAO();
	//실제 글을 작성한 사람인가 (로그인된 유저가 강의글의 아이디를 통한 유저아이디가 같은지)
	if(userID.equals(evaluationDAO.getUserID(evaluationID))){
		int result = new EvaluationDAO().delete(evaluationID);
		if(result ==1){
			PrintWriter script = response.getWriter();
			script.println("<script>");
			script.println("alert('삭제가 왼료되었습니다.');");
			script.println("location.href='index.jsp'");
			script.println("</script>");
			script.close();
			return;
		}else{
			PrintWriter script = response.getWriter();
			script.println("<script>");
			script.println("alert('데이터베이스 오류가 발생했습니다.');");
			script.println("history.back()");
			script.println("</script>");
			script.close();
			return;
		}
	}
	if(reportTitle ==null || reportContent ==null){
		PrintWriter script = response.getWriter();
		script.println("<script>");
		script.println("alert('입력이 안된 사항이 있습니다.');");
		script.println("history.back()");
		script.println("</script>");
		script.close();
		return;
	}
	
	String host="http://localhost:8090/Lecture_Evaluation/";
	String from ="mijinkim92326@gmail.com";
	String to ="mijinkim92326@gmail.com" ; //받는 사람 이메일
	//제목
	String subject ="강의평가 사이트에서 접수된 신고메일입니다.";
	//내용
	String content = "신고자 : " + userID +
					"<br> 제목 : "+ reportTitle +
					"<br> 내용 : "+ reportContent;
		
		
	//메일 보내기 위한 구글 smtp 허용 과정
	Properties p =new Properties();
	p.put("mail.smtp.user",from);
	p.put("mail.smtp.host","smtp.googlemail.com");
	p.put("mail.smtp.port","465"); //포트
	p.put("mail.smtp.starttls.enable","true");
	p.put("mail.smtp.auth","true");
	p.put("mail.smtp.debug","true");
	p.put("mail.smtp.socketFactory.port","465");
	p.put("mail.smtp.socketFactory.class","javax.net.ssl.SSLSocketFactory");
	p.put("mail.smtp.socketFactory.fallback","false");	
	
	//인증메시지 보내기
	try{
		//실제 인증을 수행해 관리자의
		Authenticator auth = new Gmail();
		Session ses= Session.getInstance(p,auth);
		ses.setDebug(true);
		MimeMessage  msg = new MimeMessage(ses);
		msg.setSubject(subject);
		//보내는사람
		Address fromAddr = new InternetAddress(from);
		msg.setFrom(fromAddr);
		//받는사람
		Address toAddr = new InternetAddress(to);
		msg.addRecipient(Message.RecipientType.TO,toAddr);
		
		msg.setContent(content,"text/html;charset=UTF-8");
		Transport.send(msg);
	}catch(Exception e){
		e.printStackTrace();
		PrintWriter script = response.getWriter();
		script.println("<script>");
		script.println("alert('오류가 발생했습니다.');");
		script.println("history.back()");
		script.println("</script>");
		script.close();
		return;
	}
	PrintWriter script = response.getWriter();
	script.println("<script>");
	script.println("alert('정상적으로 신고되었습니다.');");
	script.println("history.back()");
	script.println("</script>");
	script.close();
	%>
	
	
	

